[
  {
      "id": "aa592603.a4b8d8",
      "type": "tab",
      "label": "JeeLink with LaCrosse Sensors",
      "disabled": false,
      "info": ""
  },
  {
      "id": "660cce1.dbac53",
      "type": "serial in",
      "z": "aa592603.a4b8d8",
      "name": "JeeLink",
      "serial": "6a89d4c3.09c6ec",
      "x": 90,
      "y": 100,
      "wires": [
          [
              "4ba2580c.9bded8"
          ]
      ]
  },
  {
      "id": "ba508541.967238",
      "type": "function",
      "z": "aa592603.a4b8d8",
      "name": "Prepare for InfluxDB",
      "func": "const values = msg.payload.values;\nconst fields = {\n    'battery_new': (parseInt(values[3]) & 0x80) >> 7,\n    'battery_low': (parseInt(values[6]) & 0x80) >> 7,\n    //'type': (parseInt(values[3]) & 0x70) >> 4,\n    //'channel': parseInt(values[3]) & 0x0F,\n    'temperature': ((parseInt(values[4]) * 256) + parseInt(values[5]) - 1000)/10,\n    'humidity': parseInt(values[6]) & 0x7f\n};\nconst tags = {\n    'sensor': msg.payload.name\n};\nreturn {\n    'payload': [fields, tags]\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "x": 800,
      "y": 240,
      "wires": [
          [
              "9744f5ea.fa3f98",
              "5c9dc3b1.5ce56c"
          ]
      ]
  },
  {
      "id": "3e91c506.05135a",
      "type": "delay",
      "z": "aa592603.a4b8d8",
      "name": "",
      "pauseType": "rate",
      "timeout": "5",
      "timeoutUnits": "seconds",
      "rate": "1",
      "nbRateUnits": "30",
      "rateUnits": "second",
      "randomFirst": "1",
      "randomLast": "5",
      "randomUnits": "seconds",
      "drop": true,
      "x": 540,
      "y": 200,
      "wires": [
          [
              "ba508541.967238"
          ]
      ]
  },
  {
      "id": "5c9dc3b1.5ce56c",
      "type": "influxdb out",
      "z": "aa592603.a4b8d8",
      "influxdb": "1c9825b9.74d5ea",
      "name": "",
      "measurement": "lacrosses",
      "precision": "",
      "retentionPolicy": "",
      "x": 1050,
      "y": 240,
      "wires": []
  },
  {
      "id": "9744f5ea.fa3f98",
      "type": "debug",
      "z": "aa592603.a4b8d8",
      "name": "",
      "active": false,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload[1].sensor & \": \" & payload[0].temperature & \"Â°C / \" & payload[0].humidity & \"%\"",
      "targetType": "jsonata",
      "statusVal": "",
      "statusType": "auto",
      "x": 1020,
      "y": 180,
      "wires": []
  },
  {
      "id": "dc2a2a30.0ac948",
      "type": "function",
      "z": "aa592603.a4b8d8",
      "name": "Filter unknown sensors & name sensors",
      "func": "const values = msg.payload.split(' ');\nconst id = values[2];\n// 8 & 44 are seen, too. Not clear if they are mine ;-)\nif (['16', '56', '61', '62'].includes(id)) {\n    let name = 'unknown';\n    switch (id) {\n        case '16':\n            name = 'Schlafzimmer';\n            break;\n        case '56':\n            name = 'Arbeitszimmer';\n            break;\n        case '61':\n            name = 'Balkon';\n            break;\n        case '62':\n            name = 'Wohnzimmer';\n            break;\n    }\n    const data = {\n        'id': id,\n        'name': name,\n        'values': values\n    }\n    return {'payload': data};\n}\nreturn null;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "x": 580,
      "y": 100,
      "wires": [
          [
              "927b95b2.986448"
          ]
      ]
  },
  {
      "id": "927b95b2.986448",
      "type": "switch",
      "z": "aa592603.a4b8d8",
      "name": "Split Sensors by Id",
      "property": "payload.id",
      "propertyType": "msg",
      "rules": [
          {
              "t": "eq",
              "v": "56",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "62",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "61",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "16",
              "vt": "str"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 4,
      "x": 210,
      "y": 220,
      "wires": [
          [
              "3e91c506.05135a"
          ],
          [
              "b29994d6.cdd188"
          ],
          [
              "45af2c57.b78c34"
          ],
          [
              "cfa36989.460ba8"
          ]
      ]
  },
  {
      "id": "4ba2580c.9bded8",
      "type": "function",
      "z": "aa592603.a4b8d8",
      "name": "Filter invalid messages",
      "func": "if (msg.payload.startsWith('OK 9')) {\n    return msg;\n}\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "x": 260,
      "y": 100,
      "wires": [
          [
              "dc2a2a30.0ac948"
          ]
      ]
  },
  {
      "id": "b29994d6.cdd188",
      "type": "delay",
      "z": "aa592603.a4b8d8",
      "name": "",
      "pauseType": "rate",
      "timeout": "5",
      "timeoutUnits": "seconds",
      "rate": "1",
      "nbRateUnits": "30",
      "rateUnits": "second",
      "randomFirst": "1",
      "randomLast": "5",
      "randomUnits": "seconds",
      "drop": true,
      "x": 540,
      "y": 240,
      "wires": [
          [
              "ba508541.967238"
          ]
      ]
  },
  {
      "id": "9f13b57e.8c5eb8",
      "type": "debug",
      "z": "aa592603.a4b8d8",
      "name": "",
      "active": false,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 850,
      "y": 60,
      "wires": []
  },
  {
      "id": "45af2c57.b78c34",
      "type": "delay",
      "z": "aa592603.a4b8d8",
      "name": "",
      "pauseType": "rate",
      "timeout": "5",
      "timeoutUnits": "seconds",
      "rate": "1",
      "nbRateUnits": "30",
      "rateUnits": "second",
      "randomFirst": "1",
      "randomLast": "5",
      "randomUnits": "seconds",
      "drop": true,
      "x": 540,
      "y": 280,
      "wires": [
          [
              "ba508541.967238"
          ]
      ]
  },
  {
      "id": "c74ed44b.2a8ce8",
      "type": "function",
      "z": "aa592603.a4b8d8",
      "name": "Output Unknown Sensor Ids",
      "func": "const values = msg.payload.split(' ');\nconst id = values[2];\n// only log if the sensors are none of the known ones\nif (!['16', '56', '61', '62'].includes(id) && !['8', '44'].includes(id)) {\n    return {'payload': id};\n}",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "x": 540,
      "y": 60,
      "wires": [
          [
              "9f13b57e.8c5eb8"
          ]
      ]
  },
  {
      "id": "cfa36989.460ba8",
      "type": "delay",
      "z": "aa592603.a4b8d8",
      "name": "",
      "pauseType": "rate",
      "timeout": "5",
      "timeoutUnits": "seconds",
      "rate": "1",
      "nbRateUnits": "30",
      "rateUnits": "second",
      "randomFirst": "1",
      "randomLast": "5",
      "randomUnits": "seconds",
      "drop": true,
      "x": 540,
      "y": 320,
      "wires": [
          [
              "ba508541.967238"
          ]
      ]
  },
  {
      "id": "6a89d4c3.09c6ec",
      "type": "serial-port",
      "serialport": "/dev/ttyUSB0",
      "serialbaud": "57600",
      "databits": "8",
      "parity": "none",
      "stopbits": "1",
      "waitfor": "",
      "dtr": "none",
      "rts": "none",
      "cts": "none",
      "dsr": "none",
      "newline": "\\n",
      "bin": "false",
      "out": "char",
      "addchar": "",
      "responsetimeout": "10000"
  },
  {
      "id": "1c9825b9.74d5ea",
      "type": "influxdb",
      "hostname": "influxdb",
      "port": "8086",
      "protocol": "http",
      "database": "db0",
      "name": "InfluxDB",
      "usetls": false,
      "tls": "",
      "influxdbVersion": "1.x"
  }
]
